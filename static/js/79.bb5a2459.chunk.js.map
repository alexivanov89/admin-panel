{"version":3,"file":"static/js/79.bb5a2459.chunk.js","mappings":"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","sources":["webpack://admin-panel/./src/components/UI/Table/Table.module.scss?71d0","components/UI/Table/Table.jsx","webpack://admin-panel/./src/components/ListEntities/ListEntities.module.scss?97d1","components/ListEntities/ListEntities.jsx","containers/ListCities/ListCities.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"table\":\"Table_table__y43+-\"};","import { Table as AntdTable } from 'antd';\r\nimport styles from './Table.module.scss';\r\n\r\nconst Table = (props) => {\r\n  return <AntdTable className={styles.table} {...props} />;\r\n};\r\n\r\nexport default Table;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ListEntities_title__KL5RP\",\"card\":\"ListEntities_card__iz-Y6\",\"filterBtn\":\"ListEntities_filterBtn__tlSJs\",\"resetBtn\":\"ListEntities_resetBtn__qHB8e\"};","import { Button, Card, Col, Form, Row, Space, Typography } from 'antd';\nimport { Table } from '../UI/Table';\nimport styles from './ListEntities.module.scss';\n\nconst ListCars = (props) => {\n  const { Title } = Typography;\n  const { title, form, tableProps } = props;\n  const { onChange, fields, filters, onReset, onApply } = form;\n\n  return (\n    <>\n      <Title className={styles.title}>{title}</Title>\n      <Card\n        title={\n          <Row>\n            <Form\n              name=\"filters\"\n              layout=\"inline\"\n              style={{ width: '100%' }}\n              initialValues={{\n                period: null,\n                car: null,\n                city: null,\n                orderStatus: null,\n              }}\n              fields={fields}\n              onFieldsChange={(_, allFields) => {\n                onChange(allFields);\n              }}\n              requiredMark=\"optional\"\n              onFinish={onApply}\n            >\n              <Col xs={16} sm={17}>\n                <Space size={[15, 15]} wrap style={{ width: '100%' }}>\n                  {filters}\n                </Space>\n              </Col>\n              <Col xs={8} sm={7} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <Space size={[15, 15]} wrap>\n                  <Form.Item style={{ margin: 0 }}>\n                    <Button className={styles.resetBtn} onClick={onReset}>\n                      Сбросить\n                    </Button>\n                  </Form.Item>\n                  <Form.Item style={{ margin: 0 }}>\n                    <Button type=\"primary\" htmlType=\"submit\" className={styles.filterBtn}>\n                      Применить\n                    </Button>\n                  </Form.Item>\n                </Space>\n              </Col>\n            </Form>\n          </Row>\n        }\n        bordered={false}\n        className={styles.card}\n        bodyStyle={{ padding: '1px 0px 0px' }}\n      >\n        <Table {...tableProps} />\n      </Card>\n    </>\n  );\n};\n\nexport default ListCars;\n","import { useEffect, useState } from 'react';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ListEntities } from '../../components/ListEntities';\nimport { NextIcon, PrevIcon } from '../../assets/icon';\nimport { fetchCityAsync } from '../../store/slices/tableSlice';\n\nconst ListCities = () => {\n  const dispatch = useDispatch();\n  const { city } = useSelector(({ table }) => table);\n  const { cities, loading, count, fields } = city;\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(5);\n\n  useEffect(() => {\n    dispatch(fetchCityAsync());\n  }, []);\n\n  const dataSource = cities.map((item) => ({ ...item, key: item.id }));\n\n  const columns = fields.map((field) => {\n    switch (field) {\n      case 'name':\n        return {\n          title: 'Название',\n          dataIndex: field,\n          key: field,\n          render: (field) => (field ? <>{field}</> : null),\n        };\n\n      default:\n        return {\n          title: field,\n          dataIndex: field,\n          key: field,\n          render: (field) => (field ? <>{field}</> : null),\n        };\n    }\n  });\n\n  const onChange = (page) => {\n    setPage(page);\n  };\n\n  const itemRender = (current, type, originalElement) => {\n    if (type === 'prev') {\n      return <Button icon={<PrevIcon />} />;\n    }\n    if (type === 'next') {\n      return <Button icon={<NextIcon />} />;\n    }\n    return originalElement;\n  };\n\n  return (\n    <ListEntities\n      title=\"Список городов\"\n      form={{\n        fields: null,\n        onChange: null,\n        filters: null,\n        onReset: null,\n        onApply: null,\n      }}\n      tableProps={{\n        pagination: {\n          position: ['bottomCenter'],\n          current: page,\n          pageSize: limit,\n          onChange: onChange,\n          itemRender: itemRender,\n          showSizeChanger: false,\n        },\n        showHeader: true,\n        columns: columns,\n        dataSource: dataSource,\n        loading: loading,\n        scroll: { x: 200 },\n      }}\n    />\n  );\n};\n\nexport default ListCities;\n"],"names":["props","className","styles","Title","Typography","title","form","tableProps","onChange","fields","filters","onReset","onApply","name","layout","style","width","initialValues","period","car","city","orderStatus","onFieldsChange","_","allFields","requiredMark","onFinish","xs","sm","size","wrap","display","justifyContent","margin","onClick","type","htmlType","bordered","bodyStyle","padding","dispatch","useDispatch","useSelector","table","cities","loading","count","useState","page","setPage","limit","useEffect","fetchCityAsync","dataSource","map","item","key","id","columns","field","dataIndex","render","pagination","position","current","pageSize","itemRender","originalElement","icon","Ne","showSizeChanger","showHeader","scroll","x"],"sourceRoot":""}