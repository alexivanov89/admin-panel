{"version":3,"file":"static/js/780.19f9280a.chunk.js","mappings":"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","sources":["webpack://admin-panel/./src/components/UI/EditableTable/EditableTable.module.scss?c6f2","components/UI/EditableTable/EditableTable.jsx","webpack://admin-panel/./src/components/ListEntities/ListEntities.module.scss?97d1","components/ListEntities/ListEntities.jsx","components/UI/Image/Image.jsx","webpack://admin-panel/./src/containers/ListCars/ListCars.module.scss?304e","containers/ListCars/ListCars.jsx","utils/getRequestParams.js","utils/numberWithSpaces.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"table\":\"EditableTable_table__66N+3\",\"editableRow\":\"EditableTable_editableRow__XinJa\",\"ant-form-item-explain\":\"EditableTable_ant-form-item-explain__0ntxL\"};","import { Table as AntdTable, Input, InputNumber, Popconfirm, Form, Typography } from 'antd';\nimport { useState } from 'react';\nimport styles from './EditableTable.module.scss';\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0,\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Введите ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n\nconst EditableTable = ({ dataSource, columns, ...restProps }) => {\n  const [form] = Form.useForm();\n  const [data, setData] = useState(dataSource);\n  const [editingKey, setEditingKey] = useState('');\n\n  const isEditing = (record) => record.key === editingKey;\n\n  const edit = (record) => {\n    form.setFieldsValue({\n      name: '',\n      ...record,\n    });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  const save = async (key) => {\n    // try {\n    //   const row = await form.validateFields();\n    //   const newData = [...data];\n    //   const index = newData.findIndex((item) => key === item.key);\n    //   if (index > -1) {\n    //     const item = newData[index];\n    //     newData.splice(index, 1, { ...item, ...row });\n    //     setData(newData);\n    //     setEditingKey('');\n    //   } else {\n    //     newData.push(row);\n    //     setData(newData);\n    //     setEditingKey('');\n    //   }\n    // } catch (errInfo) {\n    //   console.log('Validate Failed:', errInfo);\n    // }\n    try {\n      const row = await form.validateFields();\n      console.log('row:', row);\n      console.log('key:', key);\n      setEditingKey('');\n    } catch (errInfo) {}\n  };\n\n  const handleDelete = async (key) => {};\n\n  const columnsEdit = [\n    ...columns,\n    {\n      title: 'Редактировать',\n      dataIndex: 'operation1',\n      width: '150px',\n      render: (_, record) => {\n        const editable = isEditing(record);\n        return editable ? (\n          <span>\n            <Typography.Link\n              onClick={() => save(record.key)}\n              style={{\n                marginRight: 8,\n                color: '#818ea3',\n              }}\n            >\n              Сохранить\n            </Typography.Link>\n            <Popconfirm title=\"Уверены что Отменить?\" onConfirm={cancel} cancelText=\"Отмена\">\n              <a>Отменить</a>\n            </Popconfirm>\n          </span>\n        ) : (\n          <Typography.Link\n            disabled={editingKey !== ''}\n            onClick={() => edit(record)}\n            style={{\n              color: '#818ea3',\n            }}\n          >\n            Редактировать\n          </Typography.Link>\n        );\n      },\n    },\n    {\n      title: 'Удалить',\n      dataIndex: 'operation2',\n      render: (_, record) => (\n        <Popconfirm\n          title=\"Уверены что Удалить?\"\n          onConfirm={() => handleDelete(record.key)}\n          cancelText=\"Отмена\"\n        >\n          <a>Удалить</a>\n        </Popconfirm>\n      ),\n    },\n  ];\n\n  const mergedColumns = columnsEdit.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n\n  console.log('mergedColumns:', mergedColumns);\n\n  return (\n    <Form form={form} component={false}>\n      <AntdTable\n        className={styles.table}\n        components={{\n          body: {\n            cell: EditableCell,\n          },\n        }}\n        dataSource={dataSource}\n        columns={mergedColumns}\n        rowClassName={styles.editableRow}\n        {...restProps}\n      />\n    </Form>\n  );\n};\n\nexport default EditableTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ListEntities_title__KL5RP\",\"card\":\"ListEntities_card__iz-Y6\",\"filterBtn\":\"ListEntities_filterBtn__tlSJs\",\"resetBtn\":\"ListEntities_resetBtn__qHB8e\"};","import { Card, Col, Form, Row, Space, Typography } from 'antd';\nimport { EditableTable } from '../UI/EditableTable';\nimport { Table } from '../UI/Table';\nimport styles from './ListEntities.module.scss';\n\nconst ListCars = (props) => {\n  const { Title } = Typography;\n  const { title, form, tableProps } = props;\n  const { onChange, fields, filters, buttons } = form;\n\n  return (\n    <>\n      <Title className={styles.title}>{title}</Title>\n      <Card\n        title={\n          <Row>\n            <Form\n              name=\"filters\"\n              layout=\"inline\"\n              style={{ width: '100%' }}\n              fields={fields}\n              onFieldsChange={(_, allFields) => {\n                onChange(allFields);\n              }}\n              requiredMark=\"optional\"\n            >\n              <Col xs={12} sm={14}>\n                <Space size={[15, 15]} wrap style={{ width: '100%' }}>\n                  {filters}\n                </Space>\n              </Col>\n              <Col xs={12} sm={10} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <Space size={[15, 15]} wrap>\n                  {buttons}\n                </Space>\n              </Col>\n            </Form>\n          </Row>\n        }\n        bordered={false}\n        className={styles.card}\n        bodyStyle={{ padding: '1px 0px 0px' }}\n      >\n        {/* <Table {...tableProps} /> */}\n        <EditableTable {...tableProps} />\n      </Card>\n    </>\n  );\n};\n\nexport default ListCars;\n","import { useState } from 'react';\r\n\r\nconst Image = ({ fallback, src, alt, ...props }) => {\r\n  const [imgSrc, setImgSrc] = useState(src);\r\n  const onError = () => setImgSrc(fallback);\r\n  return <img src={imgSrc ? imgSrc : fallback} alt={alt} onError={onError} {...props} />;\r\n};\r\n\r\nexport default Image;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"carImage\":\"ListCars_carImage__MY8yK\",\"select\":\"ListCars_select__Lu7CY\",\"addBtn\":\"ListCars_addBtn__uayeF\",\"filterBtn\":\"ListCars_filterBtn__Uweiy\",\"resetBtn\":\"ListCars_resetBtn__fk1G-\"};","import { useCallback, useEffect, useState } from 'react';\nimport { Button, Form, Select } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ListEntities } from '../../components/ListEntities';\nimport { Image } from '../../components/UI/Image';\nimport NoFoto from '../../assets/img/noFoto.jpg';\nimport { DropdownIcon, NextIcon, PrevIcon } from '../../assets/icon';\nimport { fetchCarAsync, fetchCategoryAsync } from '../../store/slices/tableSlice';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { numberWithSpaces } from '../../utils/numberWithSpaces';\nimport { getRequestParams } from '../../utils/getRequestParams';\nimport styles from './ListCars.module.scss';\n\nconst ListCars = () => {\n  const { Option } = Select;\n  const dispatch = useDispatch();\n  const {\n    car,\n    category: { categories },\n  } = useSelector(({ table }) => table);\n  const { cars, loading, count, fields } = car;\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(5);\n\n  const initialState = [\n    {\n      name: ['nameCar'],\n      value: null,\n    },\n    {\n      name: ['category'],\n      value: null,\n    },\n    {\n      name: ['tank'],\n      value: null,\n    },\n    {\n      name: ['priceMin'],\n      value: null,\n    },\n  ];\n\n  const [fieldsForm, setFields] = useState(initialState);\n\n  const optionsCategory = categories;\n\n  const optionsName = Array.from(new Set(cars.map(({ name, ...rest }) => name).filter(Boolean)));\n\n  useEffect(() => {\n    dispatch(fetchCarAsync());\n    dispatch(fetchCategoryAsync());\n  }, []);\n\n  const dataSource = cars.map((item) => ({ ...item, key: item.id }));\n\n  const columns = fields.map((field) => {\n    switch (field) {\n      case 'priceMin':\n        return {\n          title: 'Цена минимальная',\n          dataIndex: field,\n          key: field,\n          editable: true,\n          render: (price) => (price ? <>{`${numberWithSpaces(price)} ₽`}</> : null),\n        };\n\n      case 'priceMax':\n        return {\n          title: 'Цена максимальная',\n          dataIndex: field,\n          key: field,\n          editable: true,\n          render: (price) => (price ? <>{`${numberWithSpaces(price)} ₽`}</> : null),\n        };\n\n      case 'name':\n        return {\n          title: 'Марка',\n          dataIndex: field,\n          key: field,\n          render: (field) => (field ? <>{field}</> : null),\n        };\n\n      case 'thumbnail':\n        return {\n          title: 'Изображение',\n          dataIndex: field,\n          key: field?.name,\n          render: (thumbnail) => {\n            return (\n              <div className={styles.carImage}>\n                <Image\n                  src={thumbnail?.path}\n                  alt={thumbnail?.originalname}\n                  fallback={NoFoto}\n                  loading=\"lazy\"\n                />\n              </div>\n            );\n          },\n        };\n\n      case 'description':\n        return {\n          title: 'Описание',\n          dataIndex: field,\n          key: field,\n          render: (field) => (field ? <>{field}</> : null),\n        };\n\n      case 'categoryId':\n        return {\n          title: 'Категория',\n          dataIndex: field,\n          key: field?.name,\n          render: (field) => (\n            <>\n              <p>{field?.name}</p>\n              <p>{field?.description}</p>\n            </>\n          ),\n        };\n\n      case 'colors':\n        return {\n          title: 'Цвета авто',\n          dataIndex: field,\n          key: field?.name,\n          render: (colors) => {\n            return colors?.map((color) => <p key={nanoid()}>{color}</p>);\n          },\n        };\n\n      case 'tank':\n        return {\n          title: 'Топливо',\n          dataIndex: field,\n          key: field,\n          editable: true,\n          render: (tank) => (tank ? <>{`${tank}%`}</> : null),\n        };\n\n      case 'number':\n        return {\n          title: 'Номер машины',\n          dataIndex: field,\n          key: field,\n          editable: true,\n          render: (field) => (field ? <>{field}</> : null),\n        };\n\n      default:\n        return {\n          title: field,\n          dataIndex: field,\n          key: field,\n          render: (field) => (field ? <>{field}</> : null),\n        };\n    }\n  });\n\n  const onChange = (page) => {\n    setPage(page);\n  };\n\n  const itemRender = (current, type, originalElement) => {\n    if (type === 'prev') {\n      return <Button icon={<PrevIcon />} />;\n    }\n    if (type === 'next') {\n      return <Button icon={<NextIcon />} />;\n    }\n    return originalElement;\n  };\n\n  const filters = (\n    <>\n      <Form.Item name=\"nameCar\" style={{ margin: '0px 0px 0px 2px' }}>\n        <Select\n          showSearch\n          placeholder=\"Марка\"\n          optionFilterProp=\"children\"\n          filterOption={(input, option) =>\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          }\n          filterSort={(optionA, optionB) =>\n            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n          }\n          suffixIcon={<DropdownIcon />}\n          className={styles.select}\n        >\n          {optionsName?.length > 0 &&\n            optionsName.map((option) => (\n              <Option value={option} key={nanoid()}>\n                {option}\n              </Option>\n            ))}\n        </Select>\n      </Form.Item>\n      <Form.Item name=\"category\" style={{ margin: 0 }}>\n        <Select\n          showSearch\n          placeholder=\"Категория\"\n          optionFilterProp=\"children\"\n          filterSort={(optionA, optionB) =>\n            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n          }\n          suffixIcon={<DropdownIcon />}\n          className={styles.select}\n        >\n          {optionsCategory?.length > 0 &&\n            optionsCategory.map((option) => (\n              <Option value={option?.id} key={option?.id}>\n                {option?.name}\n              </Option>\n            ))}\n        </Select>\n      </Form.Item>\n      <Form.Item name=\"tank\" style={{ margin: 0 }}>\n        <Select\n          showSearch\n          placeholder=\"Топливо\"\n          optionFilterProp=\"children\"\n          filterOption={(input, option) =>\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          }\n          filterSort={(optionA, optionB) =>\n            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n          }\n          suffixIcon={<DropdownIcon />}\n          className={styles.select}\n        >\n          <Option value=\"[$gt]=50\">больше 50%</Option>\n          <Option value=\"[$lt]=50\">меньше 50%</Option>\n        </Select>\n      </Form.Item>\n      <Form.Item name=\"priceMin\" style={{ margin: 0 }}>\n        <Select\n          showSearch\n          placeholder=\"Цена мин\"\n          optionFilterProp=\"children\"\n          filterOption={(input, option) =>\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          }\n          filterSort={(optionA, optionB) =>\n            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n          }\n          suffixIcon={<DropdownIcon />}\n          className={styles.select}\n        >\n          <Option value=\"[$gt]=10000\">больше 10 тыс</Option>\n          <Option value=\"[$lt]=10000\">меньше 10 тыс</Option>\n        </Select>\n      </Form.Item>\n    </>\n  );\n\n  const onReset = useCallback(() => {\n    setFields(initialState);\n    dispatch(fetchCarAsync());\n  }, []);\n\n  const onApply = useCallback(() => {\n    dispatch(fetchCarAsync(getRequestParams(fieldsForm)));\n  }, [fieldsForm]);\n\n  const buttons = (\n    <>\n      <Form.Item style={{ margin: 0 }}>\n        <Button className={styles.addBtn}>Создать</Button>\n      </Form.Item>\n      <Form.Item style={{ margin: 0 }}>\n        <Button className={styles.resetBtn} onClick={onReset}>\n          Сбросить\n        </Button>\n      </Form.Item>\n      <Form.Item style={{ margin: 0 }}>\n        <Button type=\"primary\" htmlType=\"submit\" className={styles.filterBtn} onClick={onApply}>\n          Применить\n        </Button>\n      </Form.Item>\n    </>\n  );\n\n  return (\n    <ListEntities\n      title=\"Список авто\"\n      form={{\n        fields: fieldsForm,\n        onChange: (newFields) => {\n          setFields(newFields);\n        },\n        filters: filters,\n        buttons: buttons,\n      }}\n      tableProps={{\n        pagination: {\n          position: ['bottomCenter'],\n          current: page,\n          pageSize: limit,\n          onChange: onChange,\n          itemRender: itemRender,\n          showSizeChanger: false,\n        },\n        showHeader: true,\n        columns: columns,\n        dataSource: dataSource,\n        loading: loading,\n        scroll: { x: 980 },\n      }}\n    />\n  );\n};\n\nexport default ListCars;\n","export const getRequestParams = (params) => {\r\n  return params?.reduce((sum, item) => {\r\n    switch (item.name[0]) {\r\n      case 'tank':\r\n        if (item.value) {\r\n          return sum + `tank${item.value}&`;\r\n        }\r\n        return sum + '';\r\n\r\n      case 'city':\r\n        if (item.value) {\r\n          return sum + `cityId[id]=${item.value}&`;\r\n        }\r\n        return sum + '';\r\n\r\n      case 'category':\r\n        if (item.value) {\r\n          return sum + `categoryId[id]=${item.value}&`;\r\n        }\r\n        return sum + '';\r\n\r\n      case 'period':\r\n        if (item?.value?.value) {\r\n          return sum + `createdAt[$gt]=${item?.value?.value}&`;\r\n        }\r\n        return sum + '';\r\n\r\n      case 'nameCar':\r\n        if (item.value) {\r\n          return sum + `name=${item.value}&`;\r\n        }\r\n        return sum + '';\r\n\r\n      case 'car':\r\n        if (item.value) {\r\n          return sum + `carId[id]=${item.value}&`;\r\n        }\r\n        return sum + '';\r\n\r\n      case 'orderStatus':\r\n        if (item.value) {\r\n          return sum + `orderStatusId[id]=${item.value}&`;\r\n        }\r\n        return sum + '';\r\n\r\n      case 'priceMin':\r\n        if (item.value) {\r\n          return sum + `priceMin${item.value}&`;\r\n        }\r\n        return sum + '';\r\n\r\n      case 'rateType':\r\n        if (item.value) {\r\n          return sum + `rateTypeId[id]=${item.value}`;\r\n        }\r\n        return sum + '';\r\n\r\n      default:\r\n        if (item.value) {\r\n          return sum + `${item.name}=${item.value}&`;\r\n        }\r\n        return sum + '';\r\n    }\r\n  }, `?`);\r\n};\r\n","export const numberWithSpaces = (price) => {\r\n  return price ? price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') : null;\r\n};\r\n"],"names":["EditableCell","editing","dataIndex","title","inputType","children","record","index","restProps","inputNode","name","style","margin","rules","required","message","dataSource","columns","Form","form","useState","editingKey","setEditingKey","isEditing","key","cancel","save","validateFields","row","console","log","handleDelete","mergedColumns","width","render","_","onClick","marginRight","color","onConfirm","cancelText","disabled","setFieldsValue","edit","map","col","editable","onCell","component","className","styles","components","body","cell","rowClassName","props","Title","Typography","tableProps","onChange","fields","filters","buttons","layout","onFieldsChange","allFields","requiredMark","xs","sm","size","wrap","display","justifyContent","bordered","bodyStyle","padding","fallback","src","alt","imgSrc","setImgSrc","onError","Option","Select","dispatch","useDispatch","useSelector","table","car","categories","category","cars","loading","count","page","setPage","limit","initialState","value","fieldsForm","setFields","optionsCategory","optionsName","Array","from","Set","filter","Boolean","useEffect","fetchCarAsync","fetchCategoryAsync","item","id","field","price","numberWithSpaces","thumbnail","Image","path","originalname","NoFoto","description","colors","nanoid","tank","showSearch","placeholder","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","suffixIcon","length","onReset","useCallback","onApply","getRequestParams","type","htmlType","ListEntities","newFields","pagination","position","current","pageSize","itemRender","originalElement","icon","Ne","showSizeChanger","showHeader","scroll","x","params","reduce","sum","toString","replace"],"sourceRoot":""}