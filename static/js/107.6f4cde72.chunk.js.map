{"version":3,"file":"static/js/107.6f4cde72.chunk.js","mappings":"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","sources":["webpack://admin-panel/./src/components/EditPage/EditPage.module.scss?4e5a","components/EditPage/EditPage.jsx","components/UI/Image/Image.jsx","webpack://admin-panel/./src/containers/CarEditPage/CarEditPage.module.scss?fd40","containers/CarEditPage/CarEditPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"EditPage_container__H1Sxw\",\"cardInfo\":\"EditPage_cardInfo__Z71iu\",\"cardSettings\":\"EditPage_cardSettings__W+W15\",\"cardInfoHeader\":\"EditPage_cardInfoHeader__Ivr+U\",\"cardInfoBody\":\"EditPage_cardInfoBody__rmFw9\",\"cardInfoFooter\":\"EditPage_cardInfoFooter__534lY\",\"cardSettingsHeader\":\"EditPage_cardSettingsHeader__dGSpf\",\"cardSettingsBody\":\"EditPage_cardSettingsBody__LEk2P\",\"divider\":\"EditPage_divider__ZvXJM\"};","import { Card, Divider, Typography } from 'antd';\r\nimport styles from './EditPage.module.scss';\r\n\r\nconst EditPage = (props) => {\r\n  const { title, cardInfo, cardSettings, buttons } = props;\r\n  const { Title } = Typography;\r\n\r\n  const bodyStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title className={styles.title}>{title}</Title>\r\n      <div className={styles.container}>\r\n        <Card bordered={false} className={styles.cardInfo}>\r\n          <Card.Grid hoverable={false} className={styles.cardInfoHeader}>\r\n            {cardInfo.header}\r\n          </Card.Grid>\r\n          <Divider className={styles.divider} />\r\n          <Card.Grid hoverable={false} className={styles.cardInfoBody}>\r\n            {cardInfo.body}\r\n          </Card.Grid>\r\n          <Divider className={styles.divider} />\r\n          <Card.Grid hoverable={false} className={styles.cardInfoFooter}>\r\n            {cardInfo.footer}\r\n          </Card.Grid>\r\n        </Card>\r\n        <Card bordered={false} className={styles.cardSettings} bodyStyle={bodyStyle}>\r\n          <Card.Grid hoverable={false} className={styles.cardSettingsHeader}>\r\n            {cardSettings.header}\r\n          </Card.Grid>\r\n          <Card.Grid hoverable={false} className={styles.cardSettingsBody}>\r\n            {cardSettings.body}\r\n            {buttons}\r\n          </Card.Grid>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPage;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst Image = ({ fallback, src, alt, ...props }) => {\r\n  const [imgSrc, setImgSrc] = useState(src);\r\n\r\n  useEffect(() => {\r\n    setImgSrc(src);\r\n  }, [src]);\r\n\r\n  const onError = () => setImgSrc(fallback);\r\n  return <img src={imgSrc ? imgSrc : fallback} alt={alt} onError={onError} {...props} />;\r\n};\r\n\r\nexport default Image;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cardInfoResult\":\"CarEditPage_cardInfoResult__NEBgZ\",\"carImage\":\"CarEditPage_carImage__bXBZU\",\"wrapperUpload\":\"CarEditPage_wrapperUpload__ohFeG\",\"uploadBtn\":\"CarEditPage_uploadBtn__zq+VV\",\"placeholder\":\"CarEditPage_placeholder__hf652\",\"upload\":\"CarEditPage_upload__SZ++d\",\"cardInfoTitle\":\"CarEditPage_cardInfoTitle__+DJUc\",\"cardInfoProgress\":\"CarEditPage_cardInfoProgress__Xkdad\",\"progressTitle\":\"CarEditPage_progressTitle__AXUGR\",\"progressValue\":\"CarEditPage_progressValue__W-ss4\",\"cardInfoSpace\":\"CarEditPage_cardInfoSpace__skTY9\",\"cardInfoDescription\":\"CarEditPage_cardInfoDescription__4QVky\",\"cardSettingsHeader\":\"CarEditPage_cardSettingsHeader__n74d-\",\"checkboxGroup\":\"CarEditPage_checkboxGroup__kbTU-\",\"checkbox\":\"CarEditPage_checkbox__ae31p\",\"input\":\"CarEditPage_input__ZGAWm\",\"plusBtn\":\"CarEditPage_plusBtn__SWySq\",\"inputNumber\":\"CarEditPage_inputNumber__tqEpt\",\"select\":\"CarEditPage_select__ywb2r\",\"form\":\"CarEditPage_form__R9cb2\",\"saveBtn\":\"CarEditPage_saveBtn__Q1B-S\",\"createBtn\":\"CarEditPage_createBtn__rrGni\",\"cancelBtn\":\"CarEditPage_cancelBtn__9hsjS\",\"deleteBtn\":\"CarEditPage_deleteBtn__WBnBi\",\"groupBtnRight\":\"CarEditPage_groupBtnRight__9gSXy\",\"messageSuccess\":\"CarEditPage_messageSuccess__kb1of\",\"messageError\":\"CarEditPage_messageError__FhzVf\",\"messageIcon\":\"CarEditPage_messageIcon__T1bwu\",\"closeIcon\":\"CarEditPage_closeIcon__jeIlq\"};","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Space,\r\n  Typography,\r\n  Progress,\r\n  Result,\r\n  Upload,\r\n  message,\r\n  Form,\r\n  Input,\r\n  Checkbox,\r\n  InputNumber,\r\n  Select,\r\n  Grid,\r\n} from 'antd';\r\nimport { EditPage } from '../../components/EditPage';\r\nimport { Image } from '../../components/UI/Image';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { ApplyIcon, CloseIcon, DropdownIcon } from '../../assets/icon';\r\nimport NoFoto from '../../assets/img/noFoto.jpg';\r\nimport { tableService } from '../../services/tableService';\r\nimport { fetchCarAsync, fetchCategoryAsync } from '../../store/slices/tableSlice';\r\nimport styles from './CarEditPage.module.scss';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst CarEditPage = () => {\r\n  const { Text } = Typography;\r\n  const { TextArea } = Input;\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    category: { categories },\r\n    car: { cars },\r\n  } = useSelector(({ table }) => table);\r\n  const screens = useBreakpoint();\r\n\r\n  const messageCreate = (type, messageText) => {\r\n    const config = {\r\n      content: (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <span>{messageText}</span>\r\n          <CloseIcon\r\n            className={styles.closeIcon}\r\n            onClick={() => {\r\n              message.destroy(messageText);\r\n            }}\r\n          />\r\n        </div>\r\n      ),\r\n      duration: 3,\r\n      key: messageText,\r\n      onClick: () => message.destroy(messageText),\r\n      style: {\r\n        marginTop: '59.5px',\r\n        position: 'relative',\r\n        width: screens.xl ? 'calc(100% - 285px)' : '100%',\r\n        left: screens.xl ? '285px' : '0',\r\n      },\r\n      icon: <ApplyIcon className={styles.messageIcon} />,\r\n    };\r\n    switch (type) {\r\n      case 'success':\r\n        message.success({ ...config, className: styles.messageSuccess });\r\n        break;\r\n      case 'error':\r\n        message.error({ ...config, className: styles.messageError });\r\n        break;\r\n\r\n      default:\r\n        message.success({ ...config, className: styles.messageSuccess });\r\n        break;\r\n    }\r\n  };\r\n\r\n  const optionsCar = cars;\r\n  const optionsCategory = categories;\r\n\r\n  const [percentFillFields, setPercentFillFields] = useState(0);\r\n  const [initialValues, setInitialValues] = useState({\r\n    name: null,\r\n    categoryId: null,\r\n    colors: [],\r\n    priceMin: null,\r\n    priceMax: null,\r\n    description: null,\r\n    thumbnail: null,\r\n  });\r\n  const [id, setId] = useState(null);\r\n  const [isCreateCar, setIsCreateCar] = useState(false);\r\n  const [nameNewCar, setNameNewCar] = useState(null);\r\n  const [fileList, setFileList] = useState([]);\r\n  const [file, setFile] = useState(null);\r\n  const [valueColor, setValueColor] = useState(null);\r\n  const initialOptionsColors = [\r\n    { label: 'Красный', value: 'Красный' },\r\n    { label: 'Белый', value: 'Белый' },\r\n    { label: 'Черный', value: 'Черный' },\r\n  ];\r\n  const [optionsColors, setOptionsColors] = useState(initialOptionsColors);\r\n  const [categoryCar, setCategoryCar] = useState(null);\r\n\r\n  const getBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  const uploadImage = async (options) => {\r\n    const { onSuccess, onError, file, onProgress } = options;\r\n    const reader = new FileReader();\r\n    await reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      onSuccess(reader.result);\r\n    };\r\n    reader.onerror = (error) => onError(error);\r\n  };\r\n\r\n  const propsUpload = {\r\n    customRequest: (options) => uploadImage(options),\r\n    onRemove: (file) => {\r\n      setFileList((prev) => {\r\n        const index = prev.indexOf(file);\r\n        const newFileList = prev.slice();\r\n        newFileList.splice(index, 1);\r\n        setFile(null);\r\n        return newFileList;\r\n      });\r\n    },\r\n    beforeUpload: (file) => {\r\n      const isIMG = file.type.includes('image');\r\n      if (!isIMG) {\r\n        message.error(`${file.name} не img-файл.`);\r\n      }\r\n      return isIMG || Upload.LIST_IGNORE;\r\n    },\r\n    onChange: async (info) => {\r\n      if (info.file.status !== 'uploading') {\r\n      }\r\n      if (info.file.status === 'done') {\r\n        if (!info.file.url && !info.file.preview) {\r\n          info.file.preview = await getBase64(info.file.originFileObj);\r\n        }\r\n        setFile(info.file);\r\n        message.success(`${info.file.name} файл успешно загружен.`);\r\n      } else if (info.file.status === 'error') {\r\n        message.error(`При загрузке файла ${info.file.name} произошла ошибка.`);\r\n      }\r\n      let fileList = [...info.fileList];\r\n      fileList = fileList.slice(-1);\r\n      setFileList(fileList);\r\n    },\r\n    fileList,\r\n  };\r\n\r\n  const onSelectModel = (LabeledValue, option) => {\r\n    const car = cars.find((item) => item.id === option.key);\r\n    setId(car?.id);\r\n    setOptionsColors(car?.colors);\r\n    setCategoryCar(car?.categoryId?.name);\r\n    setFile({\r\n      preview: car?.thumbnail?.path,\r\n      size: car?.thumbnail?.size,\r\n      name: car?.thumbnail?.originalname,\r\n      type: car?.thumbnail?.mimetype,\r\n    });\r\n    setInitialValues(() => {\r\n      return {\r\n        name: car?.name,\r\n        categoryId: car?.categoryId?.id,\r\n        colors: car?.colors,\r\n        priceMin: car?.priceMin,\r\n        priceMax: car?.priceMax,\r\n        description: car?.description,\r\n        thumbnail: car?.thumbnail?.originalname,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onClear = () => {\r\n    setId(null);\r\n    setOptionsColors(initialOptionsColors);\r\n    setCategoryCar(null);\r\n    setFile(null);\r\n    setNameNewCar(null);\r\n    setInitialValues({\r\n      name: null,\r\n      categoryId: null,\r\n      colors: [],\r\n      priceMin: null,\r\n      priceMax: null,\r\n      description: null,\r\n      thumbnail: null,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategoryAsync());\r\n    dispatch(fetchCarAsync());\r\n  }, []);\r\n\r\n  const onFinish = () => {\r\n    form\r\n      .validateFields()\r\n      .then(() => {\r\n        const prepareValues = {\r\n          priceMin: form.getFieldValue('priceMin'),\r\n          priceMax: form.getFieldValue('priceMax'),\r\n          name: form.getFieldValue('name'),\r\n          description: form.getFieldValue('description'),\r\n          colors: form.getFieldValue('colors'),\r\n          categoryId: categories.find((item) => item.id === form.getFieldValue('categoryId')),\r\n          thumbnail: {\r\n            path: file?.preview,\r\n            size: file?.size,\r\n            originalname: file?.name,\r\n            mimetype: file?.type,\r\n          },\r\n        };\r\n\r\n        tableService\r\n          .putCarById(id, prepareValues)\r\n          .then(() => {\r\n            form.resetFields();\r\n          })\r\n          .then(() => {\r\n            messageCreate('success', 'Успех! Машина сохранена');\r\n            dispatch(fetchCarAsync());\r\n          })\r\n          .catch(() => {\r\n            messageCreate('error', 'При сохранении машины произошла ошибка');\r\n          });\r\n      })\r\n\r\n      .catch(() => {});\r\n  };\r\n\r\n  const onCancel = () => {\r\n    form.resetFields();\r\n    setPercentFillFields(100);\r\n  };\r\n\r\n  const onDelete = () => {\r\n    form\r\n      .validateFields()\r\n      .then(() => {\r\n        tableService\r\n          .deleteCarById(id)\r\n          .then(() => {\r\n            form.resetFields();\r\n          })\r\n          .then(() => {\r\n            messageCreate('success', 'Успех! Машина удалена');\r\n            setId(null);\r\n            dispatch(fetchCarAsync());\r\n          })\r\n          .catch(() => {\r\n            messageCreate('error', 'При удалении машины произошла ошибка');\r\n          });\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  const onCreate = () => {\r\n    form\r\n      .validateFields()\r\n      .then(() => {\r\n        const prepareValues = {\r\n          priceMin: form.getFieldValue('priceMin'),\r\n          priceMax: form.getFieldValue('priceMax'),\r\n          name: form.getFieldValue('name'),\r\n          description: form.getFieldValue('description'),\r\n          colors: form.getFieldValue('colors'),\r\n          categoryId: categories.find((item) => item.id === form.getFieldValue('categoryId')),\r\n          thumbnail: {\r\n            path: file?.preview,\r\n            size: file?.size,\r\n            originalname: file?.name,\r\n            mimetype: file?.type,\r\n          },\r\n        };\r\n\r\n        tableService\r\n          .postCar(prepareValues)\r\n          .then(() => {\r\n            form.resetFields();\r\n          })\r\n          .then(() => {\r\n            messageCreate('success', 'Успех! Машина создана');\r\n            dispatch(fetchCarAsync());\r\n          })\r\n          .catch(() => {\r\n            messageCreate('error', 'При создании машины произошла ошибка');\r\n          });\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  const onFieldsChange = (changedFields, allFields) => {\r\n    const getPercentFillFields = (fields) => {\r\n      const amountFields = fields.length;\r\n      const amountFillFields = fields.filter(({ value }) => {\r\n        if (Array.isArray(value)) {\r\n          return value.length > 0 ? true : false;\r\n        } else {\r\n          return Boolean(value);\r\n        }\r\n      }).length;\r\n\r\n      return Math.round((amountFillFields * 100) / amountFields);\r\n    };\r\n    setPercentFillFields(getPercentFillFields(allFields));\r\n  };\r\n\r\n  const buttons = (\r\n    <Row\r\n      style={{\r\n        paddingTop: 16,\r\n      }}\r\n    >\r\n      <Col span={12}>\r\n        <Form.Item>\r\n          <Space size={12.5} wrap>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className={styles.saveBtn}\r\n              disabled={!id || isCreateCar}\r\n            >\r\n              Сохранить\r\n            </Button>\r\n            <Button className={styles.cancelBtn} onClick={onCancel}>\r\n              Отменить\r\n            </Button>\r\n          </Space>\r\n        </Form.Item>\r\n      </Col>\r\n      <Col span={12} className={styles.groupBtnRight}>\r\n        <Space size={12.5} wrap>\r\n          <Button className={styles.createBtn} onClick={onCreate}>\r\n            Создать\r\n          </Button>\r\n          <Form.Item>\r\n            <Button className={styles.deleteBtn} onClick={onDelete} disabled={!id || isCreateCar}>\r\n              Удалить\r\n            </Button>\r\n          </Form.Item>\r\n        </Space>\r\n      </Col>\r\n    </Row>\r\n  );\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(initialValues);\r\n  }, [initialValues]);\r\n\r\n  return (\r\n    <Form\r\n      name=\"form\"\r\n      layout=\"vertical\"\r\n      initialValues={initialValues}\r\n      autoComplete=\"off\"\r\n      requiredMark={false}\r\n      className={styles.form}\r\n      form={form}\r\n      onFinish={onFinish}\r\n      onFieldsChange={onFieldsChange}\r\n    >\r\n      <EditPage\r\n        title={`Карточка автомобиля`}\r\n        buttons={buttons}\r\n        cardInfo={{\r\n          header: (\r\n            <Result\r\n              icon={\r\n                <div className={styles.carImage}>\r\n                  <Image src={file?.preview} alt={file?.name} fallback={NoFoto} loading=\"lazy\" />\r\n                </div>\r\n              }\r\n              title={initialValues.name || nameNewCar ? initialValues.name || nameNewCar : null}\r\n              subTitle={categoryCar}\r\n              extra={\r\n                <Form.Item\r\n                  name=\"thumbnail\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Загрузите изображение!',\r\n                    },\r\n                  ]}\r\n                  className={styles.formItem}\r\n                >\r\n                  <div className={styles.wrapperUpload}>\r\n                    {fileList.length === 0 && (\r\n                      <p className={styles.placeholder}>Выберите файл...</p>\r\n                    )}\r\n                    <Upload className={styles.upload} {...propsUpload}>\r\n                      <Button className={styles.uploadBtn}>Обзор</Button>\r\n                    </Upload>\r\n                  </div>\r\n                </Form.Item>\r\n              }\r\n              className={styles.cardInfoResult}\r\n            />\r\n          ),\r\n          body: (\r\n            <Progress\r\n              percent={percentFillFields}\r\n              format={(percent) => (\r\n                <>\r\n                  <p className={styles.progressTitle}>Заполнено</p>\r\n                  <p className={styles.progressValue}>{percent}%</p>\r\n                </>\r\n              )}\r\n              className={styles.cardInfoProgress}\r\n            />\r\n          ),\r\n          footer: (\r\n            <Space direction=\"vertical\" size={13.5} className={styles.cardInfoSpace}>\r\n              <Text className={styles.cardInfoTitle}>Описание</Text>\r\n              <Form.Item\r\n                name=\"description\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Введите описание!',\r\n                  },\r\n                ]}\r\n                className={styles.formItem}\r\n              >\r\n                <TextArea\r\n                  name=\"description\"\r\n                  className={styles.cardInfoDescription}\r\n                  bordered={false}\r\n                />\r\n              </Form.Item>\r\n            </Space>\r\n          ),\r\n        }}\r\n        cardSettings={{\r\n          header: <h2 className={styles.cardSettingsHeader}>Настройки автомобиля</h2>,\r\n          body: (\r\n            <>\r\n              <Row gutter={[21, 8]}>\r\n                <Col xs={24} sm={12}>\r\n                  <Form.Item\r\n                    label=\"Модель автомобиля\"\r\n                    name=\"name\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Введите модель!',\r\n                      },\r\n                    ]}\r\n                    className={styles.formItem}\r\n                  >\r\n                    {isCreateCar ? (\r\n                      <Input\r\n                        className={styles.input}\r\n                        value={nameNewCar}\r\n                        onChange={(e) => setNameNewCar(e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      <Select\r\n                        showSearch\r\n                        placeholder=\"Введите модель\"\r\n                        optionFilterProp=\"children\"\r\n                        filterSort={(optionA, optionB) =>\r\n                          optionA.children\r\n                            .toLowerCase()\r\n                            .localeCompare(optionB.children.toLowerCase())\r\n                        }\r\n                        suffixIcon={<DropdownIcon />}\r\n                        className={styles.select}\r\n                        onSelect={onSelectModel}\r\n                        onClear={onClear}\r\n                        allowClear\r\n                      >\r\n                        {optionsCar?.length > 0 &&\r\n                          optionsCar.map((option) => (\r\n                            <Select.Option value={option?.name} key={option?.id}>\r\n                              {option?.name}\r\n                            </Select.Option>\r\n                          ))}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={12}>\r\n                  <Form.Item\r\n                    label=\"Тип автомобиля\"\r\n                    name=\"categoryId\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Введите тип!',\r\n                      },\r\n                    ]}\r\n                    className={styles.formItem}\r\n                  >\r\n                    <Select\r\n                      showSearch\r\n                      placeholder=\"Введите тип\"\r\n                      optionFilterProp=\"children\"\r\n                      filterSort={(optionA, optionB) =>\r\n                        optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\r\n                      }\r\n                      suffixIcon={<DropdownIcon />}\r\n                      className={styles.select}\r\n                      allowClear\r\n                      onSelect={(LabeledValue, option) => {\r\n                        setCategoryCar(option?.children);\r\n                      }}\r\n                    >\r\n                      {optionsCategory?.length > 0 &&\r\n                        optionsCategory.map((option) => (\r\n                          <Select.Option value={option?.id} key={option?.id}>\r\n                            {option?.name}\r\n                          </Select.Option>\r\n                        ))}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={12}>\r\n                  <Form.Item label=\"Доступные цвета\">\r\n                    <Input.Group className={styles.inputGroup}>\r\n                      <Row gutter={8}>\r\n                        <Col flex=\"auto\">\r\n                          <Input\r\n                            className={styles.input}\r\n                            value={valueColor}\r\n                            onChange={(e) => setValueColor(e.target.value)}\r\n                          />\r\n                        </Col>\r\n                        <Col flex=\"30px\">\r\n                          <Button\r\n                            icon={<PlusOutlined />}\r\n                            disabled={!Boolean(valueColor)}\r\n                            className={styles.plusBtn}\r\n                            onClick={() => setOptionsColors([...optionsColors, valueColor])}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Input.Group>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={0} sm={12}></Col>\r\n                <Col xs={24} sm={12}>\r\n                  <Form.Item\r\n                    name=\"colors\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Выберите цвет!',\r\n                      },\r\n                    ]}\r\n                    className={styles.formItem}\r\n                  >\r\n                    <Checkbox.Group options={optionsColors} className={styles.checkboxGroup} />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={0} sm={12}></Col>\r\n                <Col xs={24} sm={12}>\r\n                  <Form.Item\r\n                    name=\"priceMin\"\r\n                    label=\"Мин. цена\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Введите мин.цену!',\r\n                      },\r\n                    ]}\r\n                    className={styles.formItem}\r\n                  >\r\n                    <InputNumber min={1} className={styles.inputNumber} />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={12}>\r\n                  <Form.Item\r\n                    name=\"priceMax\"\r\n                    label=\"Макс. цена\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: 'Введите макс.цену!',\r\n                      },\r\n                    ]}\r\n                    className={styles.formItem}\r\n                  >\r\n                    <InputNumber min={1} className={styles.inputNumber} />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={12}>\r\n                  <Form.Item label=\"Новая машина\" className={styles.formItem}>\r\n                    <Checkbox\r\n                      className={styles.checkbox}\r\n                      onChange={(e) => setIsCreateCar(e.target.checked)}\r\n                    >\r\n                      Да\r\n                    </Checkbox>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </>\r\n          ),\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CarEditPage;\r\n"],"names":["props","title","cardInfo","cardSettings","buttons","Title","Typography","className","styles","bordered","hoverable","header","body","footer","bodyStyle","display","flexDirection","height","fallback","src","alt","useState","imgSrc","setImgSrc","useEffect","onError","useBreakpoint","Grid","Text","TextArea","Input","Form","form","dispatch","useDispatch","useSelector","table","categories","category","cars","car","screens","messageCreate","type","messageText","config","content","style","justifyContent","alignItems","width","onClick","message","duration","key","marginTop","position","xl","left","icon","optionsCar","optionsCategory","percentFillFields","setPercentFillFields","name","categoryId","colors","priceMin","priceMax","description","thumbnail","initialValues","setInitialValues","id","setId","isCreateCar","setIsCreateCar","nameNewCar","setNameNewCar","fileList","setFileList","file","setFile","valueColor","setValueColor","initialOptionsColors","label","value","optionsColors","setOptionsColors","categoryCar","setCategoryCar","getBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","uploadImage","options","onSuccess","onProgress","propsUpload","customRequest","onRemove","prev","index","indexOf","newFileList","slice","splice","beforeUpload","isIMG","includes","Upload","onChange","info","status","url","preview","originFileObj","fetchCategoryAsync","fetchCarAsync","paddingTop","span","size","wrap","htmlType","disabled","resetFields","validateFields","then","prepareValues","getFieldValue","find","item","path","originalname","mimetype","tableService","catch","setFieldsValue","layout","autoComplete","requiredMark","onFinish","onFieldsChange","changedFields","allFields","fields","amountFields","length","amountFillFields","filter","Array","isArray","Boolean","Math","round","getPercentFillFields","EditPage","Image","NoFoto","loading","subTitle","extra","rules","required","percent","format","direction","gutter","xs","sm","e","target","showSearch","placeholder","optionFilterProp","filterSort","optionA","optionB","children","toLowerCase","localeCompare","suffixIcon","onSelect","LabeledValue","option","onClear","allowClear","map","flex","PlusOutlined","min","checked"],"sourceRoot":""}