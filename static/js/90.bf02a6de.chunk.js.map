{"version":3,"file":"static/js/90.bf02a6de.chunk.js","mappings":"mUACA,EAAwB,6BAAxB,EAAmE,mC,8GCG7DA,EAAe,SAAC,GASf,IARLC,EAQI,EARJA,QACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,MACAC,EAKI,EALJA,UAGAC,GAEI,EAJJC,OAII,EAHJC,MAGI,EAFJF,UACGG,GACC,YACEC,EAA0B,WAAdL,GAAyB,SAAC,IAAD,KAAkB,SAAC,IAAD,IAC7D,OACE,iCAAQI,GAAR,aACGP,GACC,SAAC,SAAD,CACES,KAAMR,EACNS,MAAO,CACLC,OAAQ,GAEVC,MAAO,CACL,CACEC,UAAU,EACVC,QAAQ,8CAAD,OAAaZ,EAAb,OARb,SAYGM,IAGHJ,MA6IR,EAvIsB,SAAC,GAA2C,IAAzCW,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,QAAYT,GAAgB,YAC/D,EAAeU,EAAAA,EAAAA,UAARC,GAAP,eACA,GAAwBC,EAAAA,EAAAA,UAASJ,GAAjC,eACA,GADA,WACoCI,EAAAA,EAAAA,UAAS,KAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAY,SAACjB,GAAD,OAAYA,EAAOkB,MAAQH,GAUvCI,EAAS,WACbH,EAAc,KAGVI,EAAI,mCAAG,WAAOF,GAAP,gGAmBSL,EAAKQ,iBAnBd,OAmBHC,EAnBG,OAoBTC,QAAQC,IAAI,OAAQF,GACpBC,QAAQC,IAAI,OAAQN,GACpBF,EAAc,IAtBL,yGAAH,sDA0BJS,EAAY,mCAAG,WAAOP,GAAP,qGAAH,sDAqDZQ,EAnDW,kBACZf,GADY,CAEf,CACEd,MAAO,iFACPD,UAAW,aACX+B,MAAO,QACPC,OAAQ,SAACC,EAAG7B,GAEV,OADiBiB,EAAUjB,IAEzB,6BACE,SAAC,SAAD,CACE8B,QAAS,kBAAMV,EAAKpB,EAAOkB,MAC3Bb,MAAO,CACL0B,YAAa,EACbC,MAAO,WAJX,qEASA,SAAC,IAAD,CAAYnC,MAAM,kHAAwBoC,UAAWd,EAAQe,WAAW,uCAAxE,UACE,kFAIJ,SAAC,SAAD,CACEC,SAAyB,KAAfpB,EACVe,QAAS,kBAlEN,SAAC9B,GACZa,EAAKuB,gBAAL,QACEhC,KAAM,IACHJ,IAELgB,EAAchB,EAAOkB,KA6DEmB,CAAKrC,IACpBK,MAAO,CACL2B,MAAO,WAJX,8FAYN,CACEnC,MAAO,6CACPD,UAAW,aACXgC,OAAQ,SAACC,EAAG7B,GAAJ,OACN,SAAC,IAAD,CACEH,MAAM,4GACNoC,UAAW,kBAAMR,EAAazB,EAAOkB,MACrCgB,WAAW,uCAHb,UAKE,4EAM0BI,KAAI,SAACC,GACrC,OAAKA,EAAIC,UAIF,kBACFD,GADL,IAEEE,OAAQ,SAACzC,GAAD,MAAa,CACnBA,OAAAA,EACAF,UAA6B,QAAlByC,EAAI3C,UAAsB,SAAW,OAChDA,UAAW2C,EAAI3C,UACfC,MAAO0C,EAAI1C,MACXF,QAASsB,EAAUjB,OAVduC,KAiBX,OAFAhB,QAAQC,IAAI,iBAAkBE,IAG5B,SAAC,IAAD,CAAMb,KAAMA,EAAM6B,WAAW,EAA7B,UACE,SAAC,KAAD,QACEC,UAAWC,EACXC,WAAY,CACVC,KAAM,CACJC,KAAMrD,IAGVgB,WAAYA,EACZC,QAASe,EACTsB,aAAcJ,GACV1C,OCvKZ,EAAwB,4BAAxB,EAA2D,2BCiD3D,EA7CiB,SAAC+C,GAChB,IAAQC,EAAUC,EAAAA,EAAAA,MACVtD,EAA4BoD,EAA5BpD,MAAOgB,EAAqBoC,EAArBpC,KAAMuC,EAAeH,EAAfG,WACbC,EAAuCxC,EAAvCwC,SAAUC,EAA6BzC,EAA7ByC,OAAQC,EAAqB1C,EAArB0C,QAASC,EAAY3C,EAAZ2C,QAEnC,OACE,iCACE,SAACN,EAAD,CAAOP,UAAWC,EAAlB,SAAiC/C,KACjC,SAAC,IAAD,CACEA,OACE,SAAC,IAAD,WACE,UAAC,IAAD,CACEO,KAAK,UACLqD,OAAO,SACPpD,MAAO,CAAEsB,MAAO,QAChB2B,OAAQA,EACRI,eAAgB,SAAC7B,EAAG8B,GAClBN,EAASM,IAEXC,aAAa,WARf,WAUE,SAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAjB,UACE,SAAC,IAAD,CAAOC,KAAM,CAAC,GAAI,IAAKC,MAAI,EAAC3D,MAAO,CAAEsB,MAAO,QAA5C,SACG4B,OAGL,SAAC,IAAD,CAAKM,GAAI,GAAIC,GAAI,GAAIzD,MAAO,CAAE4D,QAAS,OAAQC,eAAgB,YAA/D,UACE,SAAC,IAAD,CAAOH,KAAM,CAAC,GAAI,IAAKC,MAAI,EAA3B,SACGR,WAMXW,UAAU,EACVxB,UAAWC,EACXwB,UAAW,CAAEC,QAAS,eA5BxB,UA+BE,SAAC,GAAD,UAAmBjB,W,8JC/B3B,EAVc,SAACH,GACb,IAAQlD,EAA4DkD,EAA5DlD,SAAUuE,EAAkDrB,EAAlDqB,eAAgBzE,EAAkCoD,EAAlCpD,MAAO0E,EAA2BtB,EAA3BsB,SAAUC,EAAiBvB,EAAjBuB,aAEnD,OACE,SAAC,IAAD,CAAW3E,MAAOA,EAAO4E,QAASH,EAAgBI,KAAMH,EAAUI,SAAUH,EAA5E,SACGzE,K,oBCPP,EAAyB,2BCuHzB,EA/GmB,WACjB,IAAM6E,GAAWC,EAAAA,EAAAA,MACTC,GAASC,EAAAA,EAAAA,KAAY,qBAAGC,SAAxBF,KACAG,EAAmCH,EAAnCG,OAAQC,EAA2BJ,EAA3BI,QAAgB5B,GAAWwB,EAAlBK,MAAkBL,EAAXxB,QAChC,GAAwBxC,EAAAA,EAAAA,UAAS,GAAjC,eAAOsE,EAAP,KAAaC,EAAb,KACA,GAA0BvE,EAAAA,EAAAA,UAAS,GAAnC,eAAOwE,EAAP,KAEA,GAFA,MAE4CxE,EAAAA,EAAAA,WAAS,IAArD,eAAOwD,EAAP,KAAuBiB,EAAvB,MAcAC,EAAAA,EAAAA,YAAU,WACRZ,GAASa,EAAAA,EAAAA,SACR,IAEH,IAAM/E,EAAauE,EAAO3C,KAAI,SAACoD,GAAD,eAAC,UAAeA,GAAhB,IAAsBxE,IAAKwE,EAAKC,QAExDhF,EAAU2C,EAAOhB,KAAI,SAACsD,GAC1B,MACO,SADCA,EAEG,CACL/F,MAAO,mDACPD,UAAWgG,EACX1E,IAAK0E,EACLpD,UAAU,EACVb,MAAO,QACPC,OAAQ,SAACgE,GAAD,OAAYA,GAAQ,8BAAGA,IAAY,OAItC,CACL/F,MAAO+F,EACPhG,UAAWgG,EACX1E,IAAK0E,EACLhE,OAAQ,SAACgE,GAAD,OAAYA,GAAQ,8BAAGA,IAAY,UAmB7CpC,GACJ,SAAC,SAAD,CAAWnD,MAAO,CAAEC,OAAQ,GAA5B,UACE,SAAC,IAAD,CAAQqC,UAAWC,EAAed,QAxDpB,WAChByD,GAAkB,IAuDhB,0DAMJ,OACE,iCACE,SAACM,EAAA,EAAD,CACEhG,MAAM,kFACNgB,KAAM,CACJyC,OAAQ,KACRD,SAAU,KACVE,QAAS,KACTC,QAASA,GAEXJ,WAAY,CACV0C,WAAY,CACVC,SAAU,CAAC,gBACXC,QAASZ,EACTa,SAAUX,EACVjC,SArCO,SAAC+B,GAChBC,EAAQD,IAqCAc,WAlCS,SAACF,EAASG,EAAMC,GACjC,MAAa,SAATD,GACK,SAAC,IAAD,CAAQE,MAAM,SAAC,KAAD,MAEV,SAATF,GACK,SAAC,IAAD,CAAQE,MAAM,SAAC,EAAAC,GAAD,MAEhBF,GA4BCG,iBAAiB,GAEnBC,YAAY,EACZ7F,QAASA,EACTD,WAAYA,EACZwE,QAASA,EACTuB,OAAQ,CAAEC,EAAG,SAGjB,UAAC,EAAD,CACE7G,MAAM,4EACNyE,eAAgBA,EAChBC,SAvFW,WACfgB,GAAkB,IAuFdf,aApFe,WACnBe,GAAkB,IA+EhB,WAME,iCACA,iCACA","sources":["webpack://admin-panel/./src/components/UI/EditableTable/EditableTable.module.scss?c6f2","components/UI/EditableTable/EditableTable.jsx","webpack://admin-panel/./src/components/ListEntities/ListEntities.module.scss?97d1","components/ListEntities/ListEntities.jsx","components/UI/Modal/Modal.jsx","webpack://admin-panel/./src/containers/ListCities/ListCities.module.scss?46b5","containers/ListCities/ListCities.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"table\":\"EditableTable_table__66N+3\",\"editableRow\":\"EditableTable_editableRow__XinJa\",\"ant-form-item-explain\":\"EditableTable_ant-form-item-explain__0ntxL\"};","import { Table as AntdTable, Input, InputNumber, Popconfirm, Form, Typography } from 'antd';\nimport { useState } from 'react';\nimport styles from './EditableTable.module.scss';\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0,\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Введите ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n\nconst EditableTable = ({ dataSource, columns, ...restProps }) => {\n  const [form] = Form.useForm();\n  const [data, setData] = useState(dataSource);\n  const [editingKey, setEditingKey] = useState('');\n\n  const isEditing = (record) => record.key === editingKey;\n\n  const edit = (record) => {\n    form.setFieldsValue({\n      name: '',\n      ...record,\n    });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  const save = async (key) => {\n    // try {\n    //   const row = await form.validateFields();\n    //   const newData = [...data];\n    //   const index = newData.findIndex((item) => key === item.key);\n    //   if (index > -1) {\n    //     const item = newData[index];\n    //     newData.splice(index, 1, { ...item, ...row });\n    //     setData(newData);\n    //     setEditingKey('');\n    //   } else {\n    //     newData.push(row);\n    //     setData(newData);\n    //     setEditingKey('');\n    //   }\n    // } catch (errInfo) {\n    //   console.log('Validate Failed:', errInfo);\n    // }\n    try {\n      const row = await form.validateFields();\n      console.log('row:', row);\n      console.log('key:', key);\n      setEditingKey('');\n    } catch (errInfo) {}\n  };\n\n  const handleDelete = async (key) => {};\n\n  const columnsEdit = [\n    ...columns,\n    {\n      title: 'Редактировать',\n      dataIndex: 'operation1',\n      width: '150px',\n      render: (_, record) => {\n        const editable = isEditing(record);\n        return editable ? (\n          <span>\n            <Typography.Link\n              onClick={() => save(record.key)}\n              style={{\n                marginRight: 8,\n                color: '#818ea3',\n              }}\n            >\n              Сохранить\n            </Typography.Link>\n            <Popconfirm title=\"Уверены что Отменить?\" onConfirm={cancel} cancelText=\"Отмена\">\n              <a>Отменить</a>\n            </Popconfirm>\n          </span>\n        ) : (\n          <Typography.Link\n            disabled={editingKey !== ''}\n            onClick={() => edit(record)}\n            style={{\n              color: '#818ea3',\n            }}\n          >\n            Редактировать\n          </Typography.Link>\n        );\n      },\n    },\n    {\n      title: 'Удалить',\n      dataIndex: 'operation2',\n      render: (_, record) => (\n        <Popconfirm\n          title=\"Уверены что Удалить?\"\n          onConfirm={() => handleDelete(record.key)}\n          cancelText=\"Отмена\"\n        >\n          <a>Удалить</a>\n        </Popconfirm>\n      ),\n    },\n  ];\n\n  const mergedColumns = columnsEdit.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n\n  console.log('mergedColumns:', mergedColumns);\n\n  return (\n    <Form form={form} component={false}>\n      <AntdTable\n        className={styles.table}\n        components={{\n          body: {\n            cell: EditableCell,\n          },\n        }}\n        dataSource={dataSource}\n        columns={mergedColumns}\n        rowClassName={styles.editableRow}\n        {...restProps}\n      />\n    </Form>\n  );\n};\n\nexport default EditableTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ListEntities_title__KL5RP\",\"card\":\"ListEntities_card__iz-Y6\",\"filterBtn\":\"ListEntities_filterBtn__tlSJs\",\"resetBtn\":\"ListEntities_resetBtn__qHB8e\"};","import { Card, Col, Form, Row, Space, Typography } from 'antd';\nimport { EditableTable } from '../UI/EditableTable';\nimport { Table } from '../UI/Table';\nimport styles from './ListEntities.module.scss';\n\nconst ListCars = (props) => {\n  const { Title } = Typography;\n  const { title, form, tableProps } = props;\n  const { onChange, fields, filters, buttons } = form;\n\n  return (\n    <>\n      <Title className={styles.title}>{title}</Title>\n      <Card\n        title={\n          <Row>\n            <Form\n              name=\"filters\"\n              layout=\"inline\"\n              style={{ width: '100%' }}\n              fields={fields}\n              onFieldsChange={(_, allFields) => {\n                onChange(allFields);\n              }}\n              requiredMark=\"optional\"\n            >\n              <Col xs={12} sm={14}>\n                <Space size={[15, 15]} wrap style={{ width: '100%' }}>\n                  {filters}\n                </Space>\n              </Col>\n              <Col xs={12} sm={10} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <Space size={[15, 15]} wrap>\n                  {buttons}\n                </Space>\n              </Col>\n            </Form>\n          </Row>\n        }\n        bordered={false}\n        className={styles.card}\n        bodyStyle={{ padding: '1px 0px 0px' }}\n      >\n        {/* <Table {...tableProps} /> */}\n        <EditableTable {...tableProps} />\n      </Card>\n    </>\n  );\n};\n\nexport default ListCars;\n","import React, { useState } from 'react';\nimport { Modal as AntdModal, Button } from 'antd';\n\nconst Modal = (props) => {\n  const { children, isModalVisible, title, handleOk, handleCancel } = props;\n\n  return (\n    <AntdModal title={title} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n      {children}\n    </AntdModal>\n  );\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"addBtn\":\"ListCities_addBtn__xFcki\"};","import { useEffect, useState } from 'react';\nimport { Button, Form } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ListEntities } from '../../components/ListEntities';\nimport { Modal } from '../../components/UI/Modal';\nimport { NextIcon, PrevIcon } from '../../assets/icon';\nimport { fetchCityAsync } from '../../store/slices/tableSlice';\nimport styles from './ListCities.module.scss';\n\nconst ListCities = () => {\n  const dispatch = useDispatch();\n  const { city } = useSelector(({ table }) => table);\n  const { cities, loading, count, fields } = city;\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(5);\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  useEffect(() => {\n    dispatch(fetchCityAsync());\n  }, []);\n\n  const dataSource = cities.map((item) => ({ ...item, key: item.id }));\n\n  const columns = fields.map((field) => {\n    switch (field) {\n      case 'name':\n        return {\n          title: 'Название',\n          dataIndex: field,\n          key: field,\n          editable: true,\n          width: '150px',\n          render: (field) => (field ? <>{field}</> : null),\n        };\n\n      default:\n        return {\n          title: field,\n          dataIndex: field,\n          key: field,\n          render: (field) => (field ? <>{field}</> : null),\n        };\n    }\n  });\n\n  const onChange = (page) => {\n    setPage(page);\n  };\n\n  const itemRender = (current, type, originalElement) => {\n    if (type === 'prev') {\n      return <Button icon={<PrevIcon />} />;\n    }\n    if (type === 'next') {\n      return <Button icon={<NextIcon />} />;\n    }\n    return originalElement;\n  };\n\n  const buttons = (\n    <Form.Item style={{ margin: 0 }}>\n      <Button className={styles.addBtn} onClick={showModal}>\n        Создать\n      </Button>\n    </Form.Item>\n  );\n\n  return (\n    <>\n      <ListEntities\n        title=\"Список городов\"\n        form={{\n          fields: null,\n          onChange: null,\n          filters: null,\n          buttons: buttons,\n        }}\n        tableProps={{\n          pagination: {\n            position: ['bottomCenter'],\n            current: page,\n            pageSize: limit,\n            onChange: onChange,\n            itemRender: itemRender,\n            showSizeChanger: false,\n          },\n          showHeader: true,\n          columns: columns,\n          dataSource: dataSource,\n          loading: loading,\n          scroll: { x: 200 },\n        }}\n      />\n      <Modal\n        title=\"Создать город\"\n        isModalVisible={isModalVisible}\n        handleOk={handleOk}\n        handleCancel={handleCancel}\n      >\n        <p>test</p>\n        <p>test</p>\n        <p>test</p>\n      </Modal>\n    </>\n  );\n};\n\nexport default ListCities;\n"],"names":["EditableCell","editing","dataIndex","title","inputType","children","record","index","restProps","inputNode","name","style","margin","rules","required","message","dataSource","columns","Form","form","useState","editingKey","setEditingKey","isEditing","key","cancel","save","validateFields","row","console","log","handleDelete","mergedColumns","width","render","_","onClick","marginRight","color","onConfirm","cancelText","disabled","setFieldsValue","edit","map","col","editable","onCell","component","className","styles","components","body","cell","rowClassName","props","Title","Typography","tableProps","onChange","fields","filters","buttons","layout","onFieldsChange","allFields","requiredMark","xs","sm","size","wrap","display","justifyContent","bordered","bodyStyle","padding","isModalVisible","handleOk","handleCancel","visible","onOk","onCancel","dispatch","useDispatch","city","useSelector","table","cities","loading","count","page","setPage","limit","setIsModalVisible","useEffect","fetchCityAsync","item","id","field","ListEntities","pagination","position","current","pageSize","itemRender","type","originalElement","icon","Ne","showSizeChanger","showHeader","scroll","x"],"sourceRoot":""}